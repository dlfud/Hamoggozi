import React, { useEffect, useState } from "react";
import axios from "../api/axios"; 
import { useNavigate } from "react-router-dom";
import { useGroup } from '../util/GroupContext';
import '../Common.css';
import '../App.css';

const GroupList = () => {
  const { userInfo, setUserInfo, groupList, setGroupList } = useGroup();    
  const navigate = useNavigate();

  useEffect(() => {
    const getUserInfo = async () => {
      try {
        const res = await axios.get("/validate-token");
        if (res.data.valid) {
          const userInfoRes = await axios.get("/getUserInfo");
          setUserInfo(userInfoRes.data)

          const response = await axios.post("/group/getGroupList", {uid: userInfoRes.data.uid});
          setGroupList(response.data)
        }
      } catch (err) {
        console.log("토큰 없음 or 유효하지 않음");
      }
    };

    getUserInfo();
  }, []);

  const handleLogout = () => {
    localStorage.removeItem("jwtToken");
    navigate("/");
  };

  const createGroup = () => {
    navigate("/createGroup")
  }

  const goGroup = (groupUid) => {
    navigate(`/main/${groupUid}`)
  }

  return (
    <div className="container">
      <div className="content">
        <div className='groupProfile'>
          <div className='groupProfileImg'></div>
          <div>
            <div>{userInfo?.name}</div>
            <div>{userInfo?.id}</div>
            <div className="cursorPointer">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M8.37531 2.13337H7.62465L7.19465 3.85204L6.76331 3.98537C6.51197 4.06282 6.26845 4.16371 6.03598 4.28671L5.63665 4.49804L4.11665 3.58604L3.58598 4.11737L4.49798 5.63737L4.28665 6.03604C4.16342 6.26849 4.06231 6.51201 3.98465 6.76337L3.85198 7.19471L2.13331 7.62471V8.37537L3.85198 8.80537L3.98531 9.23671C4.0622 9.48915 4.16265 9.7316 4.28665 9.96404L4.49798 10.3634L3.58598 11.8834L4.11731 12.414L5.63731 11.502L6.03598 11.7134C6.26842 11.8369 6.51087 11.9376 6.76331 12.0154L7.19465 12.148L7.62465 13.8667H8.37531L8.80531 12.148L9.23665 12.0147C9.48799 11.9373 9.73151 11.8364 9.96398 11.7134L10.3633 11.502L11.8833 12.414L12.414 11.8827L11.502 10.3627L11.7133 9.96404C11.8369 9.7316 11.9375 9.48915 12.0153 9.23671L12.148 8.80537L13.8666 8.37537V7.62471L12.148 7.19471L12.0146 6.76337C11.9372 6.51203 11.8363 6.26852 11.7133 6.03604L11.502 5.63671L12.414 4.11671L11.8826 3.58604L10.3626 4.49804L9.96398 4.28671C9.73153 4.16348 9.48801 4.06237 9.23665 3.98471L8.80531 3.85204L8.37531 2.13337ZM10.3386 3.58004L11.5606 2.84671C11.6881 2.77028 11.8374 2.73861 11.9848 2.75673C12.1323 2.77485 12.2695 2.84171 12.3746 2.94671L13.0533 3.62537C13.1583 3.73051 13.2252 3.8677 13.2433 4.01518C13.2614 4.16265 13.2297 4.31195 13.1533 4.43937L12.42 5.66137C12.5666 5.93693 12.6866 6.22582 12.78 6.52804L14.162 6.87404C14.3061 6.91016 14.4341 6.99341 14.5255 7.11057C14.617 7.22773 14.6666 7.37209 14.6666 7.52071V8.47937C14.6666 8.62799 14.617 8.77235 14.5255 8.88951C14.4341 9.00668 14.3061 9.08993 14.162 9.12604L12.78 9.47204C12.6866 9.77426 12.5666 10.0632 12.42 10.3387L13.1533 11.5607C13.2297 11.6881 13.2614 11.8374 13.2433 11.9849C13.2252 12.1324 13.1583 12.2696 13.0533 12.3747L12.3746 13.0534C12.2695 13.1584 12.1323 13.2252 11.9848 13.2434C11.8374 13.2615 11.6881 13.2298 11.5606 13.1534L10.3386 12.42C10.0631 12.5667 9.7742 12.6867 9.47198 12.78L9.12598 14.162C9.08987 14.3062 9.00661 14.4342 8.88945 14.5256C8.77229 14.617 8.62793 14.6667 8.47931 14.6667H7.52065C7.37203 14.6667 7.22767 14.617 7.11051 14.5256C6.99335 14.4342 6.91009 14.3062 6.87398 14.162L6.52798 12.78C6.22844 12.6875 5.93828 12.5669 5.66131 12.42L4.43931 13.1534C4.31189 13.2298 4.16259 13.2615 4.01512 13.2434C3.86764 13.2252 3.73045 13.1584 3.62531 13.0534L2.94665 12.3747C2.84165 12.2696 2.77479 12.1324 2.75667 11.9849C2.73855 11.8374 2.77022 11.6881 2.84665 11.5607L3.57998 10.3387C3.43307 10.0617 3.31254 9.77158 3.21998 9.47204L1.83798 9.12604C1.69393 9.08995 1.56605 9.0068 1.47462 8.88978C1.3832 8.77275 1.33347 8.62855 1.33331 8.48004V7.52137C1.33332 7.37275 1.38298 7.2284 1.47442 7.11124C1.56585 6.99407 1.69382 6.91082 1.83798 6.87471L3.21998 6.52871C3.31331 6.22649 3.43331 5.9376 3.57998 5.66204L2.84665 4.44004C2.77022 4.31262 2.73855 4.16332 2.75667 4.01584C2.77479 3.86837 2.84165 3.73117 2.94665 3.62604L3.62531 2.94671C3.73045 2.84171 3.86764 2.77485 4.01512 2.75673C4.16259 2.73861 4.31189 2.77028 4.43931 2.84671L5.66131 3.58004C5.93687 3.43337 6.22576 3.31337 6.52798 3.22004L6.87398 1.83804C6.91007 1.69399 6.99322 1.56611 7.11025 1.47468C7.22727 1.38326 7.37147 1.33353 7.51998 1.33337H8.47865C8.62727 1.33338 8.77162 1.38304 8.88879 1.47448C9.00595 1.56591 9.0892 1.69388 9.12531 1.83804L9.47131 3.22004C9.77354 3.31337 10.0624 3.43337 10.338 3.58004H10.3386ZM7.99998 9.86671C8.49505 9.86671 8.96984 9.67004 9.31991 9.31997C9.66998 8.96991 9.86665 8.49511 9.86665 8.00004C9.86665 7.50497 9.66998 7.03018 9.31991 6.68011C8.96984 6.33004 8.49505 6.13337 7.99998 6.13337C7.50491 6.13337 7.03011 6.33004 6.68005 6.68011C6.32998 7.03018 6.13331 7.50497 6.13331 8.00004C6.13331 8.49511 6.32998 8.96991 6.68005 9.31997C7.03011 9.67004 7.50491 9.86671 7.99998 9.86671ZM7.99998 10.6667C7.29274 10.6667 6.61446 10.3858 6.11436 9.88566C5.61426 9.38556 5.33331 8.70728 5.33331 8.00004C5.33331 7.2928 5.61426 6.61452 6.11436 6.11442C6.61446 5.61433 7.29274 5.33337 7.99998 5.33337C8.70722 5.33337 9.3855 5.61433 9.8856 6.11442C10.3857 6.61452 10.6666 7.2928 10.6666 8.00004C10.6666 8.70728 10.3857 9.38556 9.8856 9.88566C9.3855 10.3858 8.70722 10.6667 7.99998 10.6667Z" fill="#1E1E1E"/>
              </svg>
            </div>
          </div>
        </div>
        <div className='logoutBtn' onClick={handleLogout}>
          <svg width="30" height="30" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3.33333 14C2.96667 14 2.65289 13.8696 2.392 13.6087C2.13111 13.3478 2.00044 13.0338 2 12.6667V3.33333C2 2.96667 2.13067 2.65289 2.392 2.392C2.65333 2.13111 2.96711 2.00044 3.33333 2H8V3.33333H3.33333V12.6667H8V14H3.33333ZM10.6667 11.3333L9.75 10.3667L11.45 8.66667H6V7.33333H11.45L9.75 5.63333L10.6667 4.66667L14 8L10.6667 11.3333Z" fill="#1E1E1E"/>
          </svg>
        </div>

        <div className="group">
          {groupList.map(item => {
            return (
              <div key={item.uid} className="groupButton mr10" onClick={() => goGroup(item.uid)}>
                {item.groupName}
              </div>
            )
          })}
          <div className="groupButton" onClick={() => createGroup()}>
            <svg width="64" height="64" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M7.33333 13.3333C7.33333 13.5101 7.40357 13.6797 7.5286 13.8047C7.65362 13.9298 7.82319 14 8 14C8.17681 14 8.34638 13.9298 8.4714 13.8047C8.59643 13.6797 8.66667 13.5101 8.66667 13.3333V8.66667H13.3333C13.5101 8.66667 13.6797 8.59643 13.8047 8.4714C13.9298 8.34638 14 8.17681 14 8C14 7.82319 13.9298 7.65362 13.8047 7.5286C13.6797 7.40357 13.5101 7.33333 13.3333 7.33333H8.66667V2.66667C8.66667 2.48986 8.59643 2.32029 8.4714 2.19526C8.34638 2.07024 8.17681 2 8 2C7.82319 2 7.65362 2.07024 7.5286 2.19526C7.40357 2.32029 7.33333 2.48986 7.33333 2.66667V7.33333H2.66667C2.48986 7.33333 2.32029 7.40357 2.19526 7.5286C2.07024 7.65362 2 7.82319 2 8C2 8.17681 2.07024 8.34638 2.19526 8.4714C2.32029 8.59643 2.48986 8.66667 2.66667 8.66667H7.33333V13.3333Z" fill="#1E1E1E"/>
            </svg>
          </div>
        </div>
      </div>
    </div>
  );
};

export default GroupList;
